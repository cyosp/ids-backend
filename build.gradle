buildscript {
    repositories {
        mavenCentral()
    }
    ext {
        springBootVersion = "2.3.1.RELEASE"
        idsBackendVersion = "0.0.0"
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "java"
    id 'java-library-distribution'
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id 'com.palantir.docker' version "0.25.0"
}

version = "${idsBackendVersion}"
sourceCompatibility = "1.11"

repositories {
    mavenCentral()
}

dependencies {
    ext {
        lombokVersion = "1.18.12"
        junitVersion = "5.6.2"
        mockitoVersion = "3.4.3"
        jsonwebtokenVersion = "0.11.0"
    }

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    implementation "com.graphql-java:graphql-java:15.0"
    implementation "com.graphql-java:graphql-java-spring-boot-starter-webmvc:2.0"
    implementation "com.google.guava:guava:29.0-jre"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.tomlj:tomlj:1.0.0"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.1"
    implementation "org.springframework.boot:spring-boot-starter-security:1.5.9.RELEASE"
    implementation "io.jsonwebtoken:jjwt-api:${jsonwebtokenVersion}"
    implementation "io.jsonwebtoken:jjwt-impl:${jsonwebtokenVersion}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jsonwebtokenVersion}"
    implementation "org.hibernate:hibernate-validator:6.1.5.Final"
    implementation "org.apache.commons:commons-lang3:3.11"
    implementation "org.imgscalr:imgscalr-lib:4.2"
    implementation "org.apache.commons:commons-csv:1.8"
    implementation "com.drewnoakes:metadata-extractor:2.19.0"
    implementation "com.twelvemonkeys.imageio:imageio-jpeg:3.11.0" // JPEGSegment: image metadata
    implementation "org.bytedeco:javacv-platform:1.5.12" // FFmpegFrameGrabber: video -> image
    implementation "ws.schild:jave-all-deps:3.5.0" // Encoder: video -> video

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform {
        includeEngines "junit-jupiter"
    }
}

jar {
    enabled = true
}

docker {
    name "cyosp/${rootProject.name}:${idsBackendVersion}"
    copySpec.from("build/libs").into("docker-context")
    files "generateAlternativeFormats.sh"
}
